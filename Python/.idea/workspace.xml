<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="02b43001-971b-4298-bdc8-62d9e072f125" name="Default Changelist" comment="">
      <change beforePath="$PROJECT_DIR$/../Go/.idea/dictionaries/.xml" beforeDir="false" afterPath="$PROJECT_DIR$/../Go/.idea/dictionaries/.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../Go/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/../Go/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../Go/src/go.mod" beforeDir="false" afterPath="$PROJECT_DIR$/../Go/src/go.mod" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../Go/src/go.sum" beforeDir="false" afterPath="$PROJECT_DIR$/../Go/src/go.sum" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../Go/src/go_interface/1.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../Go/src/go_project/gin-chat/models/message.go" beforeDir="false" afterPath="$PROJECT_DIR$/../Go/src/go_project/gin-chat/models/message.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../Go/src/go_project/gin-chat/router/app.go" beforeDir="false" afterPath="$PROJECT_DIR$/../Go/src/go_project/gin-chat/router/app.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../Go/src/go_project/gin-chat/service/user_service.go" beforeDir="false" afterPath="$PROJECT_DIR$/../Go/src/go_project/gin-chat/service/user_service.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../Go/src/go_project/golang-IM-System/client" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../Go/src/go_project/golang-IM-System/client.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../Go/src/go_project/golang-IM-System/main.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../Go/src/go_project/golang-IM-System/server.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../Go/src/go_project/golang-IM-System/user.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../Go/src/interview/1.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../Go/src/interview/2.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../Go/src/interview/3.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../Go/src/interview/4.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../Go/src/interview/5.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../Go/src/notice/1.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../Go/src/notice/2.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../Go/src/notice/3.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../Go/src/notice/4.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../Go/src/notice/5.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../Go/src/notice/go.mod" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../Go/src/server/zaplog_test/log.log" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/Python.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/Python.iml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/inspectionProfiles/Project_Default.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/modules.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Machine_learning/Project/1.py" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Machine_learning/Project/QR.png" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Machine_learning/numpy/.ipynb_checkpoints/未命名-checkpoint.ipynb" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Machine_learning/numpy/1.ipynb" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Machine_learning/pandas/1.py" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Machine_learning/pandas/2.py" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Machine_learning/pandas/count_pid.txt" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Machine_learning/pandas/kill.py" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Machine_learning/pandas/manager.py" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Machine_learning/pandas/test.py" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/OpenAI/openai-quickstart-python" beforeDir="false" afterPath="$PROJECT_DIR$/OpenAI/openai-quickstart-python" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/OpenAI/openai-quickstart-python/.env.example" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Test/1.py" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/douyin/0.py" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/douyin/1.mp4" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/douyin/__init__.py" beforeDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Jupyter Notebook" />
        <option value="Python Script" />
      </list>
    </option>
  </component>
  <component name="FlaskConsoleOptions" custom-start-script="import sys&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo&#10;locals().update(ScriptInfo(create_app=None).load_app().make_shell_context())&#10;print(&quot;Python %s on %s\nApp: %s [%s]\nInstance: %s&quot; % (sys.version, sys.platform, app.import_name, app.env, app.instance_path))">
    <envs>
      <env key="FLASK_APP" value="app" />
    </envs>
    <option name="myCustomStartScript" value="import sys&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo&#10;locals().update(ScriptInfo(create_app=None).load_app().make_shell_context())&#10;print(&quot;Python %s on %s\nApp: %s [%s]\nInstance: %s&quot; % (sys.version, sys.platform, app.import_name, app.env, app.instance_path))" />
    <option name="myEnvs">
      <map>
        <entry key="FLASK_APP" value="app" />
      </map>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 8
}</component>
  <component name="ProjectId" id="2SyTwpkocKdZ3jRuv8IpofWnavb" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;git-widget-placeholder&quot;: &quot;master&quot;,
    &quot;last_opened_file_path&quot;: &quot;E:/Project/Python&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;org.jetbrains.plugins.notebooks.jupyter.connections.configuration.JupyterServerConfigurable&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RunManager" selected="Python tests.pytest for test_0.TestHaHa">
    <configuration name="0 (1)" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="Python" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/subproces" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/subproces/0.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="conftest" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="Python" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/Test" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/Test/conftest.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests in test_0.py" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="Python" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/pytest0" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;$PROJECT_DIR$/pytest0/test_0.py&quot;" />
      <option name="_new_targetType" value="&quot;PATH&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="pytest for test_0.TestHaHa" type="tests" factoryName="py.test" temporary="true" nameIsGenerated="true">
      <module name="Python" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/Test" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_keywords" value="&quot;&quot;" />
      <option name="_new_parameters" value="&quot;&quot;" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_0.TestHaHa&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="pytest in test_0.py" type="tests" factoryName="py.test" temporary="true" nameIsGenerated="true">
      <module name="Python" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/Test" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_keywords" value="&quot;&quot;" />
      <option name="_new_parameters" value="&quot;&quot;" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;$PROJECT_DIR$/Test/test_0.py&quot;" />
      <option name="_new_targetType" value="&quot;PATH&quot;" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Python tests.pytest for test_0.TestHaHa" />
        <item itemvalue="Python tests.pytest in test_0.py" />
        <item itemvalue="Python.conftest" />
        <item itemvalue="Python.0 (1)" />
        <item itemvalue="Python tests.Python tests in test_0.py" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="02b43001-971b-4298-bdc8-62d9e072f125" name="Default Changelist" comment="" />
      <created>1690118061561</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1690118061561</updated>
      <workItem from="1690118064515" duration="596000" />
      <workItem from="1690813085222" duration="234000" />
      <workItem from="1691299023022" duration="5000" />
      <workItem from="1691300350620" duration="49000" />
      <workItem from="1691300410462" duration="332000" />
      <workItem from="1691303705362" duration="5720000" />
      <workItem from="1697078256607" duration="4108000" />
      <workItem from="1697514446006" duration="1934000" />
      <workItem from="1697519604260" duration="1019000" />
      <workItem from="1697526418099" duration="1256000" />
      <workItem from="1698065646950" duration="1934000" />
      <workItem from="1698158388620" duration="156000" />
      <workItem from="1698158562077" duration="1734000" />
      <workItem from="1698241749230" duration="3849000" />
      <workItem from="1698326093750" duration="6005000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/Python$0.coverage" NAME="0 Coverage Results" MODIFIED="1691310774077" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/douyin" />
    <SUITE FILE_PATH="coverage/Python$0__1_.coverage" NAME="0 (1) Coverage Results" MODIFIED="1698243079578" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/subproces" />
    <SUITE FILE_PATH="coverage/Python$.coverage" NAME=" Coverage Results" MODIFIED="1698067323175" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/pytest0" />
    <SUITE FILE_PATH="coverage/Python$pytest_for_test_0_TestHaHa.coverage" NAME="pytest for test_0.TestHaHa Coverage Results" MODIFIED="1698331756148" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/Test" />
    <SUITE FILE_PATH="coverage/Python$conftest.coverage" NAME="conftest Coverage Results" MODIFIED="1698245063056" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/Test" />
    <SUITE FILE_PATH="coverage/Python$1.coverage" NAME="1 Coverage Results" MODIFIED="1690813282389" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/Test" />
    <SUITE FILE_PATH="coverage/Python$baidu.coverage" NAME="baidu Coverage Results" MODIFIED="1697097576177" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/Crawler/scrapyer/scrapyer/spiders" />
    <SUITE FILE_PATH="coverage/Python$pytest_in_test_0_py.coverage" NAME="pytest in test_0.py Coverage Results" MODIFIED="1698331694275" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/Test" />
  </component>
</project>